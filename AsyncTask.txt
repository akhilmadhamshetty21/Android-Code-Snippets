Calling AsyncTask:-
new GetJSONData().execute(item);

Build.gradle:-
implementation group: 'commons-io', name: 'commons-io', version: '2.6'

AsyncTask:-

 class GetJSONData extends AsyncTask<String, Void, ArrayList<News>>{

        @Override
        protected ArrayList<News> doInBackground(String... strings) {
            HttpURLConnection connection = null;
            try {
                String url = baseURL + "?"
                        + "apikey=" + getResources().getString(R.string.news_key)
                        + "&" + "category=" + strings[0];
                Log.d(TAG, "doInBackground: ==================================================");
                news.clear();

                URL url1 = new URL(url);
                connection = (HttpURLConnection) url1.openConnection();
                connection.connect();
                if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) {
                    String json = IOUtils.toString(connection.getInputStream(), "UTF8");

                    JSONObject root = new JSONObject(json);
                    JSONArray articles = root.getJSONArray("articles");
                    for (int i=0;i<articles.length();i++) {
                        JSONObject articleJson = articles.getJSONObject(i);

                        News newsItem = new News();

                        newsItem.title = articleJson.getString("title");
                        newsItem.imageURL = articleJson.getString("urlToImage");
                        newsItem.Description = articleJson.getString("description");
                        newsItem.publishedAt = articleJson.getString("publishedAt");
                        Log.d(TAG, "doInBackground: "+newsItem.title);
                        news.add(newsItem);
                    }
                }

            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            } catch (JSONException e) {
                e.printStackTrace();
            }


            return news;
        }

        @Override
        protected void onPostExecute(ArrayList<News> news) {
            super.onPostExecute(news);
            if(news!=null) {
                Picasso.get().load(news.get(0).imageURL).into(imageView);
                title.setText(news.get(0).title);
                description.setText(news.get(0).Description);
                createddate.setText(news.get(0).publishedAt);
            }
            for (News newsItem: news) {
//                Log.d(TAG, "Article: " + newsItem.title);
            }
        }
    }